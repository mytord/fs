/*
 * First social
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Profile struct {

	Id int32 `json:"id,omitempty"`

	Email string `json:"email"`

	Password string `json:"password"`

	FirstName string `json:"firstName"`

	LastName string `json:"lastName"`

	Age int32 `json:"age"`

	City string `json:"city"`

	Interests string `json:"interests"`
}

// AssertProfileRequired checks if the required fields are not zero-ed
func AssertProfileRequired(obj Profile) error {
	elements := map[string]interface{}{
		"email": obj.Email,
		"password": obj.Password,
		"firstName": obj.FirstName,
		"lastName": obj.LastName,
		"age": obj.Age,
		"city": obj.City,
		"interests": obj.Interests,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseProfileRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Profile (e.g. [][]Profile), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseProfileRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aProfile, ok := obj.(Profile)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertProfileRequired(aProfile)
	})
}
