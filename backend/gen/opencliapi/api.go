/*
 * First social
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// PrivateApiRouter defines the required methods for binding the api requests to a responses for the PrivateApi
// The PrivateApiRouter implementation should parse necessary information from the http request,
// pass the data to a PrivateApiServicer to perform the required actions, then write the service results to the http response.
type PrivateApiRouter interface { 
	GetCurrentProfile(http.ResponseWriter, *http.Request)
	GetProfile(http.ResponseWriter, *http.Request)
	ListProfiles(http.ResponseWriter, *http.Request)
}
// PublicApiRouter defines the required methods for binding the api requests to a responses for the PublicApi
// The PublicApiRouter implementation should parse necessary information from the http request,
// pass the data to a PublicApiServicer to perform the required actions, then write the service results to the http response.
type PublicApiRouter interface { 
	CreateProfile(http.ResponseWriter, *http.Request)
	Login(http.ResponseWriter, *http.Request)
}


// PrivateApiServicer defines the api actions for the PrivateApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PrivateApiServicer interface { 
	GetCurrentProfile(context.Context) (ImplResponse, error)
	GetProfile(context.Context, int64) (ImplResponse, error)
	ListProfiles(context.Context, int32, int32) (ImplResponse, error)
}


// PublicApiServicer defines the api actions for the PublicApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PublicApiServicer interface { 
	CreateProfile(context.Context, Profile) (ImplResponse, error)
	Login(context.Context, LoginCredentials) (ImplResponse, error)
}
